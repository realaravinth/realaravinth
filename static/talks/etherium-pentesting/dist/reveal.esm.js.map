{"version":3,"file":"reveal.esm.js","sources":["../js/utils/constants.js","../js/utils/util.js","../js/utils/device.js","../node_modules/.pnpm/fitty@2.3.6/node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/controllers/slidenumber.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/controllers/autoanimate.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/print.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["\nexport const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;","/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = ( a, b ) => {\n\n\tfor( let i in b ) {\n\t\ta[ i ] = b[ i ];\n\t}\n\n\treturn a;\n\n}\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = ( el, selector ) => {\n\n\treturn Array.from( el.querySelectorAll( selector ) );\n\n}\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = ( el, className, value ) => {\n\tif( value ) {\n\t\tel.classList.add( className );\n\t}\n\telse {\n\t\tel.classList.remove( className );\n\t}\n}\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = ( value ) => {\n\n\tif( typeof value === 'string' ) {\n\t\tif( value === 'null' ) return null;\n\t\telse if( value === 'true' ) return true;\n\t\telse if( value === 'false' ) return false;\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\n\t}\n\n\treturn value;\n\n}\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = ( a, b ) => {\n\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt( dx*dx + dy*dy );\n\n}\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = ( element, transform ) => {\n\n\telement.style.transform = transform;\n\n}\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = ( target, selector ) => {\n\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\n\n}\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = ( target, selector ) => {\n\n\t// Native Element.closest\n\tif( typeof target.closest === 'function' ) {\n\t\treturn target.closest( selector );\n\t}\n\n\t// Polyfill\n\twhile( target ) {\n\t\tif( matches( target, selector ) ) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = element => {\n\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\telement.msRequestFullscreen;\n\n\tif( requestMethod ) {\n\t\trequestMethod.apply( element );\n\t}\n\n}\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\n\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll( '.' + classname );\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor( let i = 0; i < nodes.length; i++ ) {\n\t\tlet testNode = nodes[i];\n\t\tif( testNode.parentNode === container ) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement( tagname );\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild( node );\n\n\treturn node;\n\n}\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = ( value ) => {\n\n\tlet tag = document.createElement( 'style' );\n\ttag.type = 'text/css';\n\n\tif( value && value.length > 0 ) {\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t}\n\n\tdocument.head.appendChild( tag );\n\n\treturn tag;\n\n}\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\n\tlet query = {};\n\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t} );\n\n\t// Basic deserialization\n\tfor( let i in query ) {\n\t\tlet value = query[ i ];\n\n\t\tquery[ i ] = deserialize( unescape( value ) );\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\treturn query;\n\n}\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = ( element, height = 0 ) => {\n\n\tif( element ) {\n\t\tlet newHeight, oldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = '0px';\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = 'auto';\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + 'px';\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty('height');\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n\n}","const UA = navigator.userAgent;\nconst testElement = document.createElement( 'div' );\n\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\n\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\nexport const isAndroid = /android/gi.test( UA );\n\n// Flags if we should use zoom instead of transform to scale\n// up slides. Zoom produces crisper results but has a lot of\n// xbrowser quirks so we only use it in whitelisted browsers.\nexport const supportsZoom = 'zoom' in testElement.style && !isMobile &&\n\t\t\t\t( isChrome || /Version\\/[\\d\\.]+.*Safari/.test( UA ) );","/**\n * fitty v2.3.6 - Snugly resizes text to fit its parent container\n * Copyright (c) 2022 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n\nvar e=function(e){if(e){var t=function(e){return[].slice.call(e)},n=0,i=1,r=2,o=3,a=[],l=null,u=\"requestAnimationFrame\"in e?function(){e.cancelAnimationFrame(l),l=e.requestAnimationFrame((function(){return s(a.filter((function(e){return e.dirty&&e.active})))}))}:function(){},c=function(e){return function(){a.forEach((function(t){return t.dirty=e})),u()}},s=function(e){e.filter((function(e){return!e.styleComputed})).forEach((function(e){e.styleComputed=m(e)})),e.filter(y).forEach(v);var t=e.filter(p);t.forEach(d),t.forEach((function(e){v(e),f(e)})),t.forEach(S)},f=function(e){return e.dirty=n},d=function(e){e.availableWidth=e.element.parentNode.clientWidth,e.currentWidth=e.element.scrollWidth,e.previousFontSize=e.currentFontSize,e.currentFontSize=Math.min(Math.max(e.minSize,e.availableWidth/e.currentWidth*e.previousFontSize),e.maxSize),e.whiteSpace=e.multiLine&&e.currentFontSize===e.minSize?\"normal\":\"nowrap\"},p=function(e){return e.dirty!==r||e.dirty===r&&e.element.parentNode.clientWidth!==e.availableWidth},m=function(t){var n=e.getComputedStyle(t.element,null);return t.currentFontSize=parseFloat(n.getPropertyValue(\"font-size\")),t.display=n.getPropertyValue(\"display\"),t.whiteSpace=n.getPropertyValue(\"white-space\"),!0},y=function(e){var t=!1;return!e.preStyleTestCompleted&&(/inline-/.test(e.display)||(t=!0,e.display=\"inline-block\"),\"nowrap\"!==e.whiteSpace&&(t=!0,e.whiteSpace=\"nowrap\"),e.preStyleTestCompleted=!0,t)},v=function(e){e.element.style.whiteSpace=e.whiteSpace,e.element.style.display=e.display,e.element.style.fontSize=e.currentFontSize+\"px\"},S=function(e){e.element.dispatchEvent(new CustomEvent(\"fit\",{detail:{oldValue:e.previousFontSize,newValue:e.currentFontSize,scaleFactor:e.currentFontSize/e.previousFontSize}}))},h=function(e,t){return function(){e.dirty=t,e.active&&u()}},w=function(e){return function(){a=a.filter((function(t){return t.element!==e.element})),e.observeMutations&&e.observer.disconnect(),e.element.style.whiteSpace=e.originalStyle.whiteSpace,e.element.style.display=e.originalStyle.display,e.element.style.fontSize=e.originalStyle.fontSize}},b=function(e){return function(){e.active||(e.active=!0,u())}},z=function(e){return function(){return e.active=!1}},F=function(e){e.observeMutations&&(e.observer=new MutationObserver(h(e,i)),e.observer.observe(e.element,e.observeMutations))},g={minSize:16,maxSize:512,multiLine:!0,observeMutations:\"MutationObserver\"in e&&{subtree:!0,childList:!0,characterData:!0}},W=null,E=function(){e.clearTimeout(W),W=e.setTimeout(c(r),x.observeWindowDelay)},M=[\"resize\",\"orientationchange\"];return Object.defineProperty(x,\"observeWindow\",{set:function(t){var n=\"\".concat(t?\"add\":\"remove\",\"EventListener\");M.forEach((function(t){e[n](t,E)}))}}),x.observeWindow=!0,x.observeWindowDelay=100,x.fitAll=c(o),x}function C(e,t){var n=Object.assign({},g,t),i=e.map((function(e){var t=Object.assign({},n,{element:e,active:!0});return function(e){e.originalStyle={whiteSpace:e.element.style.whiteSpace,display:e.element.style.display,fontSize:e.element.style.fontSize},F(e),e.newbie=!0,e.dirty=!0,a.push(e)}(t),{element:e,fit:h(t,o),unfreeze:b(t),freeze:z(t),unsubscribe:w(t)}}));return u(),i}function x(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return\"string\"==typeof e?C(t(document.querySelectorAll(e)),n):C([e],n)[0]}}(\"undefined\"==typeof window?null:window);export default e;\n","import { HORIZONTAL_SLIDES_SELECTOR, VERTICAL_SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, closest } from '../utils/util.js'\nimport { isMobile } from '../utils/device.js'\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\n\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload( element ) {\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif( typeof preload !== 'boolean' ) {\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload( slide, options = {} ) {\n\n\t\t// Show the slide element\n\t\tslide.style.display = this.Reveal.getConfig().display;\n\n\t\t// Media elements with data-src attributes\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\telement.removeAttribute( 'data-src' );\n\t\t\t}\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\tbackgroundContent.style.backgroundImage = 'url('+ encodeURI( backgroundImage ) +')';\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo && !this.Reveal.isSpeakerNotes() ) {\n\t\t\t\t\tlet video = document.createElement( 'video' );\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\n\t\t\t\t\t\tvideo.innerHTML += '<source src=\"'+ source +'\">';\n\t\t\t\t\t} );\n\n\t\t\t\t\tbackgroundContent.appendChild( video );\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\n\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\n\t\t\tif( backgroundIframeElement ) {\n\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from( slide.querySelectorAll( '.r-fit-text:not([data-fitted])' ) ).forEach( element => {\n\t\t\telement.dataset.fitted = '';\n\t\t\tfitty( element, {\n\t\t\t\tminSize: 24,\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\tobserveMutations: false,\n\t\t\t\tobserveWindow: false\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground( slide );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\n\t\t\t\telement.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\n\t\t\telement.removeAttribute( 'src' );\n\t\t} );\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\n\t\t\tsource.removeAttribute( 'src' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent( element ) {\n\n\t\tif( element && !this.Reveal.isSpeakerNotes() ) {\n\n\t\t\t// Restart GIFs\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if( isMobile ) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\n\t\t\t\t\t\t\tpromise.catch( () => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Normal iframes\n\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.startEmbeddedIframe( { target: el } );\n\t\t\t} );\n\n\t\t\t// Lazy loading iframes\n\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia( event ) {\n\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\tevent.target.currentTime = 0;\n\t\t\tevent.target.play();\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe( event ) {\n\n\t\tlet iframe = event.target;\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent( element, options = {} ) {\n\n\t\toptions = extend( {\n\t\t\t// Defaults\n\t\t\tunloadIframes: true\n\t\t}, options );\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tel.pause();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif( options.unloadIframes === true ) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n}","/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'slide-number';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tlet slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !this.Reveal.isPrintingPDF() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update slide number if enabled\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = 'h.v';\n\n\t\tif ( typeof config.slideNumber === 'function' ) {\n\t\t\tvalue = config.slideNumber( slide );\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\n\t\t\t\tformat = 'c';\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch( format ) {\n\t\t\t\tcase 'c':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c/t':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\n\t\t\t\t\tlet sep = format === 'h/v' ? '/' : '.';\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\n\t\t\t}\n\t\t}\n\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t\telse {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\n\t}\n\n}","/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = ( color ) => {\n\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\tif( hex3 && hex3[1] ) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t};\n\t}\n\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\tif( hex6 && hex6[1] ) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt( hex6.substr( 0, 2 ), 16 ),\n\t\t\tg: parseInt( hex6.substr( 2, 2 ), 16 ),\n\t\t\tb: parseInt( hex6.substr( 4, 2 ), 16 )\n\t\t};\n\t}\n\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\tif( rgb ) {\n\t\treturn {\n\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\tb: parseInt( rgb[3], 10 )\n\t\t};\n\t}\n\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\tif( rgba ) {\n\t\treturn {\n\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\ta: parseFloat( rgba[4] )\n\t\t};\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = ( color ) => {\n\n\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\tif( color ) {\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t}\n\n\treturn null;\n\n}","import { queryAll } from '../utils/util.js'\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'backgrounds';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\n\t\tlet printMode = this.Reveal.isPrintingPDF();\n\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\n\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\n\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.element.style.backgroundImage = '';\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground( slide, container ) {\n\n\t\t// Main slide background element\n\t\tlet element = document.createElement( 'div' );\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement( 'div' );\n\t\tcontentElement.className = 'slide-background-content';\n\n\t\telement.appendChild( contentElement );\n\t\tcontainer.appendChild( element );\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync( slide );\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync( slide ) {\n\n\t\tlet element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\telement.removeAttribute( 'data-loaded' );\n\t\telement.removeAttribute( 'data-background-hash' );\n\t\telement.removeAttribute( 'data-background-size' );\n\t\telement.removeAttribute( 'data-background-transition' );\n\t\telement.style.backgroundColor = '';\n\n\t\tcontentElement.style.backgroundSize = '';\n\t\tcontentElement.style.backgroundRepeat = '';\n\t\tcontentElement.style.backgroundPosition = '';\n\t\tcontentElement.style.backgroundImage = '';\n\t\tcontentElement.style.opacity = '';\n\t\tcontentElement.innerHTML = '';\n\n\t\tlet data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' )\n\t\t};\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp)([?#\\s]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tif( slide.hasAttribute( 'data-preload' ) ) element.setAttribute( 'data-preload', '' );\n\n\t\t// Background image options are set on the content wrapper\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = data.backgroundColor;\n\n\t\t// If no bg color was found, check the computed background\n\t\tif( !contrastColor ) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif( contrastColor ) {\n\t\t\tlet rgb = colorToRgb( contrastColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\n\t\t\t\t\tslide.classList.add( 'has-dark-background' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.classList.add( 'has-light-background' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate( includeAll = false ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\n\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\n\n\t\t\tif( h < indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indices.h ) {\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\n\n\t\t\t\t\tif( v < indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( this.previousBackground ) {\n\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( currentBackground ) {\n\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\n\t\t\tif( currentBackgroundContent ) {\n\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground ? this.previousBackground.getAttribute( 'data-background-hash' ) : null;\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\n\t\t\t\tthis.element.classList.add( 'no-transition' );\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\n\t\t\t\tif( currentSlide.classList.contains( classToBubble ) ) {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.add( classToBubble );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.remove( classToBubble );\n\t\t\t\t}\n\t\t\t}, this );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( () => {\n\t\t\tthis.element.classList.remove( 'no-transition' );\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n}","import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun( fromSlide, toSlide ) {\n\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\t// Ensure that both slides are auto-animate targets\n\t\tif( fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' ) ) {\n\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tlet allSlides = this.Reveal.getSlides();\n\t\t\tanimationOptions.slideDirection = allSlides.indexOf( toSlide ) > allSlides.indexOf( fromSlide ) ? 'forward' : 'backward';\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\n\t\t\t} );\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\n\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\n\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\n\t\t\t\t\tlet id = 'unmatched';\n\n\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\n\t\t\t\t\t}\n\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\n\t\t\t\t}, this );\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\n\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'autoanimate',\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\n\t\t// Reset slides\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\n\t\t\telement.dataset.autoAnimate = '';\n\t\t} );\n\n\t\t// Reset elements\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t} );\n\n\t\t// Remove the animation sheet\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\n\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = '';\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\n\n\t\t// Maintain fragment visibility for matching elements when\n\t\t// we're navigating forwards, this way the viewer won't need\n\t\t// to step through the same fragments twice\n\t\tif( to.classList.contains( 'fragment' ) ) {\n\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles['opacity'];\n\n\t\t\tif( from.classList.contains( 'fragment' ) ) {\n\n\t\t\t\tlet fromFragmentStyle = ( from.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\t\t\t\tlet toFragmentStyle = ( to.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\n\t\t\t\t// Only skip the fragment if the fragment animation style\n\t\t\t\t// remains unchanged\n\t\t\t\tif( fromFragmentStyle === toFragmentStyle && animationOptions.slideDirection === 'forward' ) {\n\t\t\t\t\tto.classList.add( 'visible', 'disabled' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif( translate || scale ) {\n\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\n\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\n\n\t\t\t\ttoProps.styles['transform'] = 'none';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor( let propertyName in toProps.styles ) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif( toValue === fromValue ) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif( toValue.explicitValue === true ) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif( fromValue.explicitValue === true ) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = '';\n\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif( toStyleProperties.length > 0 ) {\n\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles['transition'] = 'none';\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\n\n\t\t}\n\n\t\treturn css;\n\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\n\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0\n\t\t};\n\n\t\toptions = extend( options, inheritedOptions );\n\n\t\t// Inherit options from parent elements\n\t\tif( element.parentNode ) {\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\n\t\t\tif( autoAnimatedParent ) {\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\n\t\t\t}\n\t\t}\n\n\t\tif( element.dataset.autoAnimateEasing ) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDuration ) {\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDelay ) {\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\n\t\t}\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\n\t\t\t\tbounds = elementOptions.measure( element );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( config.center ) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle( element );\n\n\t\t// CSS styles\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif( typeof style === 'string' ) style = { property: style };\n\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t}\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t}\n\n\t\t\tif( value !== '' ) {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn properties;\n\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\n\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter( ( pair, index ) => {\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\n\t\t\t\treserved.push( pair.to );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\n\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = 'pre';\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n\t\tconst mediaNodes = 'img, video, iframe';\n\n\t\t// Eplicit matches via data-id\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\n\t\t} );\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\n\t\t} );\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\tpairs.forEach( pair => {\n\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif( matches( pair.from, textNodes ) ) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\n\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\n\t\t\t\t\treturn node.textContent;\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-line[data-line-number]', node => {\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [ 'width' ],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn pairs;\n\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox( element ) {\n\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\n\t\t};\n\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\n\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\tif( typeof key === 'string' && key.length ) {\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\tfromMatches[key].push( element );\n\t\t\t}\n\t\t} );\n\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push( element );\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif( fromMatches[key] ) {\n\t\t\t\tconst pimaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif( fromMatches[key][ pimaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ pimaryIndex ];\n\t\t\t\t\tfromMatches[key][ pimaryIndex ] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif( fromElement ) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considerd\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\n\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\n\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\n\t\t\t\tresult.push( element );\n\t\t\t}\n\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}, [] );\n\n\t}\n\n}\n","import { extend, queryAll } from '../utils/util.js'\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.fragments === false ) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse if( oldConfig.fragments === false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.add( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.remove( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort( fragments, grouped = false ) {\n\n\t\tfragments = Array.from( fragments );\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( fragment => {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( group => {\n\t\t\tgroup.forEach( fragment => {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn grouped === true ? ordered : sorted;\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\t}, this );\n\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate( index, fragments ) {\n\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: []\n\t\t};\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tfragments = fragments || this.sort( currentSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\tif( fragments.length ) {\n\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet currentFragment = this.sort( currentSlide.querySelectorAll( '.fragment.visible' ) ).pop();\n\t\t\t\t\tif( currentFragment ) {\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\n\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.add( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\n\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( !wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'visible',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.remove( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\n\t\t\t\tcurrentSlide.setAttribute( 'data-fragment', index );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn changedFragments;\n\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto( index, offset = 0 ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update( index, fragments );\n\n\t\t\t\tif( changedFragments.hidden.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmenthidden',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\t\t\tfragments: changedFragments.hidden\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif( changedFragments.shown.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmentshown',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\t\t\tfragments: changedFragments.shown\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\n\t\treturn this.goto( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\n\t\treturn this.goto( null, -1 );\n\n\t}\n\n}","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, transformElement } from '../utils/util.js'\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview && !this.isActive() ) {\n\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewshown',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview ) {\n\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewhidden',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked( event ) {\n\n\t\tif( this.isActive() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tthis.Reveal.slide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n}","import { enterFullscreen } from '../utils/util.js'\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\n\t\tthis.onDocumentKeyPress = this.onDocumentKeyPress.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.navigationMode === 'linear' ) {\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\n\t\t}\n\t\telse {\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\n\t\t\tthis.shortcuts['P']             = 'Previous slide';\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n\t\t}\n\n\t\tthis.shortcuts['Home  ,  Shift &#8592;']        = 'First slide';\n\t\tthis.shortcuts['End  ,  Shift &#8594;']         = 'Last slide';\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\n\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.addEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.removeEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding( binding, callback ) {\n\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding( keyCode ) {\n\n\t\tdelete this.bindings[keyCode];\n\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey( keyCode ) {\n\n\t\tthis.onDocumentKeyDown( { keyCode } );\n\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut( key, value ) {\n\n\t\tthis.shortcuts[key] = value;\n\n\t}\n\n\tgetShortcuts() {\n\n\t\treturn this.shortcuts;\n\n\t}\n\n\tgetBindings() {\n\n\t\treturn this.bindings;\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keypress' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyPress( event ) {\n\n\t\t// Check if the pressed key is question mark\n\t\tif( event.shiftKey && event.charCode === 63 ) {\n\t\t\tthis.Reveal.toggleHelp();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown( event ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Whitelist specific modified + keycode combinations\n\t\tlet prevSlideShortcut = event.shiftKey && event.keyCode === 32;\n\t\tlet firstSlideShortcut = event.shiftKey && keyCode === 37;\n\t\tlet lastSlideShortcut = event.shiftKey && keyCode === 39;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier = \t!prevSlideShortcut && !firstSlideShortcut && !lastSlideShortcut &&\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66,86,190,191];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif( triggered === false ) {\n\n\t\t\tfor( key in this.bindings ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof action === 'function' ) {\n\t\t\t\t\t\taction.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ action ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\n\t\t\t\tif( firstSlideShortcut ) {\n\t\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\n\t\t\t\tif( lastSlideShortcut ) {\n\t\t\t\t\tthis.Reveal.slide( Number.MAX_VALUE );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\n\t\t\t\tif( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\n\t\t\t\tif( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if( keyCode === 36 ) {\n\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t}\n\t\t\t// END\n\t\t\telse if( keyCode === 35 ) {\n\t\t\t\tthis.Reveal.slide( Number.MAX_VALUE );\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if( keyCode === 32 ) {\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if( keyCode === 58 || keyCode === 59 || keyCode === 66 || keyCode === 86 || keyCode === 190 || keyCode === 191 ) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if( keyCode === 70 ) {\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\n\t\t\t}\n\t\t\t// A\n\t\t\telse if( keyCode === 65 ) {\n\t\t\t\tif ( config.autoSlideStoppable ) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\n\t}\n\n}","/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\n\n\t}\n\n\tbind() {\n\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\tunbind() {\n\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet indices = this.Reveal.getIndices();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\tlet hash = window.location.hash;\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet bits = hash.slice( 2 ).split( '/' ),\n\t\t\tname = hash.replace( /#\\/?/gi, '' );\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\n\t\t\tlet element;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split( '/' ).shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\ttry {\n\t\t\t\telement = document.getElementById( decodeURIComponent( name ) );\n\t\t\t}\n\t\t\tcatch ( error ) { }\n\n\t\t\t// Ensure that we're not already on a slide with the same name\n\t\t\tlet isSameNameAsCurrentSlide = currentSlide ? currentSlide.getAttribute( 'id' ) === name : false;\n\n\t\t\tif( element ) {\n\t\t\t\t// If the slide exists and is not the current slide...\n\t\t\t\tif ( !isSameNameAsCurrentSlide || typeof f !== 'undefined' ) {\n\t\t\t\t\t// ...find the position of the named slide and navigate to it\n\t\t\t\t\tlet slideIndices = this.Reveal.getIndices( element );\n\t\t\t\t\tthis.Reveal.slide( slideIndices.h, slideIndices.v, f );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If the slide doesn't exist, navigate to the current slide\n\t\t\telse {\n\t\t\t\tthis.Reveal.slide( indices.h || 0, indices.v || 0 );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tf;\n\n\t\t\tif( config.fragmentInURL ) {\n\t\t\t\tf = parseInt( bits[2], 10 );\n\t\t\t\tif( isNaN( f ) ) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( h !== indices.h || v !== indices.v || f !== undefined ) {\n\t\t\t\tthis.Reveal.slide( h, v, f );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL( delay ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout( this.writeURLTimeout );\n\n\t\t// If a delay is specified, timeout this call\n\t\tif( typeof delay === 'number' ) {\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\n\t\t}\n\t\telse if( currentSlide ) {\n\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not avaialble.\n\t\t\tif( config.history ) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if( config.hash ) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif( hash === '/' ) {\n\t\t\t\t\twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twindow.history.replaceState( null, null, '#' + hash );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash( slide ) {\n\n\t\tlet url = '/';\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\n\t\tif( id ) {\n\t\t\tid = encodeURIComponent( id );\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices( slide );\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif( typeof id === 'string' && id.length ) {\n\t\t\turl = '/' + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange( event ) {\n\n\t\tthis.readURL();\n\n\t}\n\n}","import { queryAll } from '../utils/util.js'\nimport { isAndroid } from '../utils/device.js'\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n */\nexport default class Controls {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement( 'aside' );\n\t\tthis.element.className = 'controls';\n\t\tthis.element.innerHTML =\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\n\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\n\n\t}\n\n\tbind() {\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif( isAndroid ) {\n\t\t\tpointerEvents = [ 'touchstart' ];\n\t\t}\n\n\t\tpointerEvents.forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\tunbind() {\n\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide ) {\n\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( this.Reveal.isVerticalSlide( currentSlide ) ) {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\n\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\n\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.prev();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.left();\n\t\t}\n\n\t}\n\n\tonNavigateRightClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.next();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.right();\n\t\t}\n\n\t}\n\n\tonNavigateUpClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\n\t}\n\n\tonNavigateDownClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\n\t}\n\n\tonNavigatePrevClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\n\t}\n\n\tonNavigateNextClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\n\t}\n\n\n}","/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'progress';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\tthis.bar = document.createElement( 'span' );\n\t\tthis.element.appendChild( this.bar );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update progress if enabled\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\n\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\n\n\t\t}\n\n\t}\n\n\tgetMaxWidth() {\n\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked( event ) {\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tlet slidesTotal = this.Reveal.getHorizontalSlides().length;\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\n\n\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tthis.Reveal.slide( slideIndex );\n\n\t}\n\n\n}","/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.addEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif( config.hideInactiveCursor ) {\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\t\telse {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\n\t\tif( this.cursorHidden ) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\n\t\t}\n\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\n\t\tif( this.cursorHidden === false ) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\n\t\t}\n\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive( event ) {\n\n\t\tthis.showCursor();\n\n\t\tclearTimeout( this.cursorInactiveTimeout );\n\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\n\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}","/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = ( url, callback ) => {\n\n\tconst script = document.createElement( 'script' );\n\tscript.type = 'text/javascript';\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif( typeof callback === 'function' ) {\n\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = event => {\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = err => {\n\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\n\n\t\t};\n\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector( 'head' );\n\thead.insertBefore( script, head.lastChild );\n\n}","import { loadScript } from '../utils/loader.js'\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\n\tconstructor( reveal ) {\n\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = 'idle';\n\n\t\t// An id:instance map of currently registed plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload( plugins, dependencies ) {\n\n\t\tthis.state = 'loading';\n\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach( s => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\t\tif( s.async ) {\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscripts.push( s );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( scripts.length ) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\n\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach( s => {\n\t\t\t\t\tif( typeof s.id === 'string' ) {\n\t\t\t\t\t\tthis.registerPlugin( s );\n\t\t\t\t\t\tscriptLoadedCallback( s );\n\t\t\t\t\t}\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif( pluginsToInitialize === 0 ) {\n\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tinitNextPlugin();\n\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\n\t\tthis.state = 'loaded';\n\n\t\tif( this.asyncDependencies.length ) {\n\t\t\tthis.asyncDependencies.forEach( s => {\n\t\t\t\tloadScript( s.src, s.callback );\n\t\t\t} );\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all regisered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin( plugin ) {\n\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if( typeof plugin === 'function' ) {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif( typeof id !== 'string' ) {\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\n\t\t}\n\t\telse if( this.registeredPlugins[id] === undefined ) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\n\t\t\t\tplugin.init( this.Reveal );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin( id ) {\n\n\t\treturn !!this.registeredPlugins[id];\n\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin( id ) {\n\n\t\treturn this.registeredPlugins[id];\n\n\t}\n\n\tgetRegisteredPlugins() {\n\n\t\treturn this.registeredPlugins;\n\n\t}\n\n}\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll, createStyleSheet } from '../utils/util.js'\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class Print {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tsetupPDF() {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tlet pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tlet slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.documentElement.classList.add( 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\t// Make sure stretch elements fit on slide\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tlet doingSlideNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\n\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( function( slide ) {\n\t\t\tslide.setAttribute( 'data-slide-number', this.Reveal.slideNumber.getSlideNumber( slide ) );\n\t\t}, this );\n\n\t\t// Slide and slide background layout\n\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( function( slide ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2,\n\t\t\t\t\ttop = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tlet contentHeight = slide.scrollHeight;\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tlet page = document.createElement( 'div' );\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\t\t\t\tslide.parentNode.insertBefore( page, slide );\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tlet notes = this.Reveal.getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tlet notesSpacing = 8;\n\t\t\t\t\t\tlet notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tlet notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpage.parentNode.insertBefore( notesElement, page.nextSibling );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject slide numbers if `slideNumbers` are enabled\n\t\t\t\tif( doingSlideNumbers ) {\n\t\t\t\t\tlet numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = slide.getAttribute( 'data-slide-number' );\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif( config.pdfSeparateFragments ) {\n\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tlet fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\n\n\t\t\t\t\tlet previousFragmentStep;\n\t\t\t\t\tlet previousPage;\n\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif( previousFragmentStep ) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tlet clonedPage = page.cloneNode( true );\n\t\t\t\t\t\tpage.parentNode.insertBefore( clonedPage, ( previousPage || page ).nextSibling );\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\t\t\t\t\t\tpreviousPage = clonedPage;\n\n\t\t\t\t\t}, this );\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n\t}\n\n\t/**\n\t * Checks if this instance is being used to print a PDF.\n\t */\n\tisPrintingPDF() {\n\n\t\treturn ( /print-pdf/gi ).test( window.location.search );\n\n\t}\n\n}","import { isAndroid } from '../utils/device.js'\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\n\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif( 'onpointerdown' in window ) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\n\t\t}\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\n\t\t}\n\t\telse {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented( target ) {\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif( !this.touchCaptured ) {\n\t\t\tthis.Reveal.onUserInput( event );\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\n\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( isAndroid ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd( event );\n\t\t}\n\n\t}\n\n}","import { closest } from '../utils/util.js'\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.embedded ) {\n\t\t\tthis.blur();\n\t\t}\n\t\telse {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().embedded ) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\n\t}\n\n\tfocus() {\n\n\t\tif( this.state !== STATE_FOCUS ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\n\t}\n\n\tblur() {\n\n\t\tif( this.state !== STATE_BLUR ) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\n\t}\n\n\tisFocused() {\n\n\t\treturn this.state === STATE_FOCUS;\n\n\t}\n\n\tonRevealPointerDown( event ) {\n\n\t\tthis.focus();\n\n\t}\n\n\tonDocumentPointerDown( event ) {\n\n\t\tlet revealElement = closest( event.target, '.reveal' );\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\n\t\t\tthis.blur();\n\t\t}\n\n\t}\n\n}","/**\n * Handles the showing and \n */\nexport default class Notes {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'speaker-notes';\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\n\t\tthis.element.setAttribute( 'tabindex', '0' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.showNotes ) {\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.element && this.Reveal.getCurrentSlide() && !this.Reveal.print.isPrintingPDF() ) {\n\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.hasNotes() && !this.Reveal.print.isPrintingPDF() ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. As an <aside class=\"notes\"> inside of the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using an <aside class=\"notes\"> element\n\t\tlet notesElement = slide.querySelector( 'aside.notes' );\n\t\tif( notesElement ) {\n\t\t\treturn notesElement.innerHTML;\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n}","/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\tsetPlaying( value ) {\n\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tanimate() {\n\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\n\t\t}\n\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t}\n\n\ton( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t}\n\n\toff( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t}\n\n\tdestroy() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t}\n\n}","/**\n * The default reveal.js config object.\n */\nexport default {\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: 'all',\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when retuning false\n\t//\n\t// If you set this to 'foucsed', we will only capture keyboard events\n\t// for embdedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autolaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: 'ease',\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t'opacity',\n\t\t'color',\n\t\t'background-color',\n\t\t'padding',\n\t\t'font-size',\n\t\t'line-height',\n\t\t'letter-spacing',\n\t\t'border-width',\n\t\t'border-color',\n\t\t'border-radius',\n\t\t'outline',\n\t\t'outline-offset'\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'block',\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: []\n\n}","import SlideContent from './controllers/slidecontent.js'\nimport SlideNumber from './controllers/slidenumber.js'\nimport Backgrounds from './controllers/backgrounds.js'\nimport AutoAnimate from './controllers/autoanimate.js'\nimport Fragments from './controllers/fragments.js'\nimport Overview from './controllers/overview.js'\nimport Keyboard from './controllers/keyboard.js'\nimport Location from './controllers/location.js'\nimport Controls from './controllers/controls.js'\nimport Progress from './controllers/progress.js'\nimport Pointer from './controllers/pointer.js'\nimport Plugins from './controllers/plugins.js'\nimport Print from './controllers/print.js'\nimport Touch from './controllers/touch.js'\nimport Focus from './controllers/focus.js'\nimport Notes from './controllers/notes.js'\nimport Playback from './components/playback.js'\nimport defaultConfig from './config.js'\nimport * as Util from './utils/util.js'\nimport * as Device from './utils/device.js'\nimport {\n\tSLIDES_SELECTOR,\n\tHORIZONTAL_SLIDES_SELECTOR,\n\tVERTICAL_SLIDES_SELECTOR,\n\tPOST_MESSAGE_METHOD_BLACKLIST\n} from './utils/constants.js'\n\n// The reveal.js version\nexport const VERSION = '4.1.0';\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2020 Hakim El Hattab, https://hakim.se\n */\nexport default function( revealElement, options ) {\n\n\t// Support initialization with no args, one arg\n\t// [options] or two args [revealElement, options]\n\tif( arguments.length < 2 ) {\n\t\toptions = arguments[0];\n\t\trevealElement = document.querySelector( '.reveal' );\n\t}\n\n\tconst Reveal = {};\n\n\t// Configuration defaults, can be overridden at initialization time\n\tlet config = {},\n\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\n\t\tready = false,\n\n\t\t// The horizontal and vertical index of the currently active slide\n\t\tindexh,\n\t\tindexv,\n\n\t\t// The previous and current slide HTML elements\n\t\tpreviousSlide,\n\t\tcurrentSlide,\n\n\t\t// Remember which directions that the user has navigated towards\n\t\tnavigationHistory = {\n\t\t\thasNavigatedHorizontally: false,\n\t\t\thasNavigatedVertically: false\n\t\t},\n\n\t\t// Slides may have a data-state attribute which we pick up and apply\n\t\t// as a class to the body. This list contains the combined state of\n\t\t// all current slides.\n\t\tstate = [],\n\n\t\t// The current scale of the presentation (see width/height config)\n\t\tscale = 1,\n\n\t\t// CSS transform that is currently applied to the slides container,\n\t\t// split into two groups\n\t\tslidesTransform = { layout: '', overview: '' },\n\n\t\t// Cached references to DOM elements\n\t\tdom = {},\n\n\t\t// Flags if the interaction event listeners are bound\n\t\teventsAreBound = false,\n\n\t\t// The current slide transition state; idle or running\n\t\ttransition = 'idle',\n\n\t\t// The current auto-slide duration\n\t\tautoSlide = 0,\n\n\t\t// Auto slide properties\n\t\tautoSlidePlayer,\n\t\tautoSlideTimeout = 0,\n\t\tautoSlideStartTime = -1,\n\t\tautoSlidePaused = false,\n\n\t\t// Controllers for different aspects of our presentation. They're\n\t\t// all given direct references to this Reveal instance since there\n\t\t// may be multiple presentations running in parallel.\n\t\tslideContent = new SlideContent( Reveal ),\n\t\tslideNumber = new SlideNumber( Reveal ),\n\t\tautoAnimate = new AutoAnimate( Reveal ),\n\t\tbackgrounds = new Backgrounds( Reveal ),\n\t\tfragments = new Fragments( Reveal ),\n\t\toverview = new Overview( Reveal ),\n\t\tkeyboard = new Keyboard( Reveal ),\n\t\tlocation = new Location( Reveal ),\n\t\tcontrols = new Controls( Reveal ),\n\t\tprogress = new Progress( Reveal ),\n\t\tpointer = new Pointer( Reveal ),\n\t\tplugins = new Plugins( Reveal ),\n\t\tprint = new Print( Reveal ),\n\t\tfocus = new Focus( Reveal ),\n\t\ttouch = new Touch( Reveal ),\n\t\tnotes = new Notes( Reveal );\n\n\t/**\n\t * Starts up the presentation.\n\t */\n\tfunction initialize( initOptions ) {\n\n\t\t// Cache references to key DOM elements\n\t\tdom.wrapper = revealElement;\n\t\tdom.slides = revealElement.querySelector( '.slides' );\n\n\t\t// Compose our config object in order of increasing precedence:\n\t\t// 1. Default reveal.js options\n\t\t// 2. Options provided via Reveal.configure() prior to\n\t\t//    initialization\n\t\t// 3. Options passed to the Reveal constructor\n\t\t// 4. Options passed to Reveal.initialize\n\t\t// 5. Query params\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\n\n\t\tsetViewport();\n\n\t\t// Force a layout when the whole page, incl fonts, has loaded\n\t\twindow.addEventListener( 'load', layout, false );\n\n\t\t// Register plugins and load dependencies, then move on to #start()\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\n\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\n\n\t}\n\n\t/**\n\t * Encase the presentation in a reveal.js viewport. The\n\t * extent of the viewport differs based on configuration.\n\t */\n\tfunction setViewport() {\n\n\t\t// Embedded decks use the reveal element as their viewport\n\t\tif( config.embedded === true ) {\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\n\t\t}\n\t\t// Full-page decks use the body as their viewport\n\t\telse {\n\t\t\tdom.viewport = document.body;\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\n\t\t}\n\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\n\n\t}\n\n\t/**\n\t * Starts up reveal.js by binding input events and navigating\n\t * to the current URL deeplink if there is one.\n\t */\n\tfunction start() {\n\n\t\tready = true;\n\n\t\t// Remove slides hidden with data-visibility\n\t\tremoveHiddenSlides();\n\n\t\t// Make sure we've got all the DOM elements we need\n\t\tsetupDOM();\n\n\t\t// Listen to messages posted to this window\n\t\tsetupPostMessage();\n\n\t\t// Prevent the slides from being scrolled out of view\n\t\tsetupScrollPrevention();\n\n\t\t// Resets all vertical slides so that only the first is visible\n\t\tresetVerticalSlides();\n\n\t\t// Updates the presentation to match the current configuration values\n\t\tconfigure();\n\n\t\t// Read the initial hash\n\t\tlocation.readURL();\n\n\t\t// Create slide backgrounds\n\t\tbackgrounds.update( true );\n\n\t\t// Notify listeners that the presentation is ready but use a 1ms\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\n\t\tsetTimeout( () => {\n\t\t\t// Enable transitions now that we're loaded\n\t\t\tdom.slides.classList.remove( 'no-transition' );\n\n\t\t\tdom.wrapper.classList.add( 'ready' );\n\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'ready',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tcurrentSlide\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1 );\n\n\t\t// Special setup and config is required when printing to PDF\n\t\tif( print.isPrintingPDF() ) {\n\t\t\tremoveEventListeners();\n\n\t\t\t// The document needs to have loaded for the PDF layout\n\t\t\t// measurements to be accurate\n\t\t\tif( document.readyState === 'complete' ) {\n\t\t\t\tprint.setupPDF();\n\t\t\t}\n\t\t\telse {\n\t\t\t\twindow.addEventListener( 'load', () => {\n\t\t\t\t\tprint.setupPDF();\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes all slides with data-visibility=\"hidden\". This\n\t * is done right before the rest of the presentation is\n\t * initialized.\n\t *\n\t * If you want to show all hidden slides, initialize\n\t * reveal.js with showHiddenSlides set to true.\n\t */\n\tfunction removeHiddenSlides() {\n\n\t\tif( !config.showHiddenSlides ) {\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\n\t\t\t\tslide.parentNode.removeChild( slide );\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Finds and stores references to DOM elements which are\n\t * required by the presentation. If a required element is\n\t * not found, it is created.\n\t */\n\tfunction setupDOM() {\n\n\t\t// Prevent transitions while we're loading\n\t\tdom.slides.classList.add( 'no-transition' );\n\n\t\tif( Device.isMobile ) {\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\n\t\t}\n\n\t\tbackgrounds.render();\n\t\tslideNumber.render();\n\t\tcontrols.render();\n\t\tprogress.render();\n\t\tnotes.render();\n\n\t\t// Overlay graphic which is displayed during the paused mode\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\n\n\t\tdom.statusElement = createStatusElement();\n\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\n\t}\n\n\t/**\n\t * Creates a hidden div with role aria-live to announce the\n\t * current slide content. Hide the div off-screen to make it\n\t * available only to Assistive Technologies.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createStatusElement() {\n\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\n\t\tif( !statusElement ) {\n\t\t\tstatusElement = document.createElement( 'div' );\n\t\t\tstatusElement.style.position = 'absolute';\n\t\t\tstatusElement.style.height = '1px';\n\t\t\tstatusElement.style.width = '1px';\n\t\t\tstatusElement.style.overflow = 'hidden';\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n\t\t\tstatusElement.classList.add( 'aria-status' );\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\n\t\t\tdom.wrapper.appendChild( statusElement );\n\t\t}\n\t\treturn statusElement;\n\n\t}\n\n\t/**\n\t * Announces the given text to screen readers.\n\t */\n\tfunction announceStatus( value ) {\n\n\t\tdom.statusElement.textContent = value;\n\n\t}\n\n\t/**\n\t * Converts the given HTML element into a string of text\n\t * that can be announced to a screen reader. Hidden\n\t * elements are excluded.\n\t */\n\tfunction getStatusText( node ) {\n\n\t\tlet text = '';\n\n\t\t// Text node\n\t\tif( node.nodeType === 3 ) {\n\t\t\ttext += node.textContent;\n\t\t}\n\t\t// Element node\n\t\telse if( node.nodeType === 1 ) {\n\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\n\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\n\t\t\t\t\ttext += getStatusText( child );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\ttext = text.trim();\n\n\t\treturn text === '' ? '' : text + ' ';\n\n\t}\n\n\t/**\n\t * This is an unfortunate necessity. Some actions – such as\n\t * an input field being focused in an iframe or using the\n\t * keyboard to expand text selection beyond the bounds of\n\t * a slide – can trigger our content to be pushed out of view.\n\t * This scrolling can not be prevented by hiding overflow in\n\t * CSS (we already do) so we have to resort to repeatedly\n\t * checking if the slides have been offset :(\n\t */\n\tfunction setupScrollPrevention() {\n\n\t\tsetInterval( () => {\n\t\t\tif( dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\n\t\t\t\tdom.wrapper.scrollTop = 0;\n\t\t\t\tdom.wrapper.scrollLeft = 0;\n\t\t\t}\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * Registers a listener to postMessage events, this makes it\n\t * possible to call all reveal.js API methods from another\n\t * window. For example:\n\t *\n\t * revealWindow.postMessage( JSON.stringify({\n\t *   method: 'slide',\n\t *   args: [ 2 ]\n\t * }), '*' );\n\t */\n\tfunction setupPostMessage() {\n\n\t\tif( config.postMessage ) {\n\t\t\twindow.addEventListener( 'message', event => {\n\t\t\t\tlet data = event.data;\n\n\t\t\t\t// Make sure we're dealing with JSON\n\t\t\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n\t\t\t\t\tdata = JSON.parse( data );\n\n\t\t\t\t\t// Check if the requested method can be found\n\t\t\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\n\n\t\t\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\n\n\t\t\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\n\n\t\t\t\t\t\t\t// Dispatch a postMessage event with the returned value from\n\t\t\t\t\t\t\t// our method invocation for getter functions\n\t\t\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies the configuration settings from the config\n\t * object. May be called multiple times.\n\t *\n\t * @param {object} options\n\t */\n\tfunction configure( options ) {\n\n\t\tconst oldConfig = { ...config }\n\n\t\t// New config options may be passed when this method\n\t\t// is invoked through the API after initialization\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\n\n\t\t// Abort if reveal.js hasn't finished loading, config\n\t\t// changes will be applied automatically once ready\n\t\tif( Reveal.isReady() ===  false ) return;\n\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\n\n\t\t// The transition is added as a class on the .reveal element\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\n\t\tdom.wrapper.classList.add( config.transition );\n\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\n\n\t\t// Expose our configured slide dimensions as custom props\n\t\tdom.viewport.style.setProperty( '--slide-width', config.width + 'px' );\n\t\tdom.viewport.style.setProperty( '--slide-height', config.height + 'px' );\n\n\t\tif( config.shuffle ) {\n\t\t\tshuffle();\n\t\t}\n\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\n\n\t\t// Exit the paused mode if it was configured off\n\t\tif( config.pause === false ) {\n\t\t\tresume();\n\t\t}\n\n\t\t// Iframe link previews\n\t\tif( config.previewLinks ) {\n\t\t\tenablePreviewLinks();\n\t\t\tdisablePreviewLinks( '[data-preview-link=false]' );\n\t\t}\n\t\telse {\n\t\t\tdisablePreviewLinks();\n\t\t\tenablePreviewLinks( '[data-preview-link]:not([data-preview-link=false])' );\n\t\t}\n\n\t\t// Reset all changes made by auto-animations\n\t\tautoAnimate.reset();\n\n\t\t// Remove existing auto-slide controls\n\t\tif( autoSlidePlayer ) {\n\t\t\tautoSlidePlayer.destroy();\n\t\t\tautoSlidePlayer = null;\n\t\t}\n\n\t\t// Generate auto-slide controls if needed\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\n\t\t\t} );\n\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\n\t\t\tautoSlidePaused = false;\n\t\t}\n\n\t\t// Add the navigation mode to the DOM so we can adjust styling\n\t\tif( config.navigationMode !== 'default' ) {\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\n\t\t}\n\n\t\tnotes.configure( config, oldConfig );\n\t\tfocus.configure( config, oldConfig );\n\t\tpointer.configure( config, oldConfig );\n\t\tcontrols.configure( config, oldConfig );\n\t\tprogress.configure( config, oldConfig );\n\t\tkeyboard.configure( config, oldConfig );\n\t\tfragments.configure( config, oldConfig );\n\t\tslideNumber.configure( config, oldConfig );\n\n\t\tsync();\n\n\t}\n\n\t/**\n\t * Binds all event listeners.\n\t */\n\tfunction addEventListeners() {\n\n\t\teventsAreBound = true;\n\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\tif( config.touch ) touch.bind();\n\t\tif( config.keyboard ) keyboard.bind();\n\t\tif( config.progress ) progress.bind();\n\t\tif( config.respondToHashChanges ) location.bind();\n\t\tcontrols.bind();\n\t\tfocus.bind();\n\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\n\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Unbinds all event listeners.\n\t */\n\tfunction removeEventListeners() {\n\n\t\teventsAreBound = false;\n\n\t\ttouch.unbind();\n\t\tfocus.unbind();\n\t\tkeyboard.unbind();\n\t\tcontrols.unbind();\n\t\tprogress.unbind();\n\t\tlocation.unbind();\n\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\n\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\n\n\t}\n\n\t/**\n\t * Adds a listener to one of our custom reveal.js events,\n\t * like slidechanged.\n\t */\n\tfunction on( type, listener, useCapture ) {\n\n\t\trevealElement.addEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Unsubscribes from a reveal.js event.\n\t */\n\tfunction off( type, listener, useCapture ) {\n\n\t\trevealElement.removeEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Applies CSS transforms to the slides container. The container\n\t * is transformed from two separate sources: layout and the overview\n\t * mode.\n\t *\n\t * @param {object} transforms\n\t */\n\tfunction transformSlides( transforms ) {\n\n\t\t// Pick up new transforms from arguments\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\n\n\t\t// Apply the transforms to the slides container\n\t\tif( slidesTransform.layout ) {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\n\t\t}\n\t\telse {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\n\t\t}\n\n\t}\n\n\t/**\n\t * Dispatches an event of the specified type from the\n\t * reveal DOM element.\n\t */\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\n\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\n\t\tevent.initEvent( type, bubbles, true );\n\t\tUtil.extend( event, data );\n\t\ttarget.dispatchEvent( event );\n\n\t\tif( target === dom.wrapper ) {\n\t\t\t// If we're in an iframe, post each reveal.js event to the\n\t\t\t// parent window. Used by the notes plugin\n\t\t\tdispatchPostMessage( type );\n\t\t}\n\n\t}\n\n\t/**\n\t * Dispatched a postMessage of the given type from our window.\n\t */\n\tfunction dispatchPostMessage( type, data ) {\n\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\n\t\t\tlet message = {\n\t\t\t\tnamespace: 'reveal',\n\t\t\t\teventName: type,\n\t\t\t\tstate: getState()\n\t\t\t};\n\n\t\t\tUtil.extend( message, data );\n\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Bind preview frame links.\n\t *\n\t * @param {string} [selector=a] - selector for anchors\n\t */\n\tfunction enablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.addEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unbind preview frame links.\n\t */\n\tfunction disablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.removeEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Opens a preview window for the target URL.\n\t *\n\t * @param {string} url - url for preview iframe src\n\t */\n\tfunction showPreview( url ) {\n\n\t\tcloseOverlay();\n\n\t\tdom.overlay = document.createElement( 'div' );\n\t\tdom.overlay.classList.add( 'overlay' );\n\t\tdom.overlay.classList.add( 'overlay-preview' );\n\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\tdom.overlay.innerHTML =\n\t\t\t`<header>\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t</header>\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<div class=\"viewport\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"viewport-inner\">\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n\t\tdom.overlay.querySelector( 'iframe' ).addEventListener( 'load', event => {\n\t\t\tdom.overlay.classList.add( 'loaded' );\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.external' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t}, false );\n\n\t}\n\n\t/**\n\t * Open or close help overlay window.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * help is open, false means it's closed.\n\t */\n\tfunction toggleHelp( override ){\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? showHelp() : closeOverlay();\n\t\t}\n\t\telse {\n\t\t\tif( dom.overlay ) {\n\t\t\t\tcloseOverlay();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tshowHelp();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens an overlay window with help material.\n\t */\n\tfunction showHelp() {\n\n\t\tif( config.help ) {\n\n\t\t\tcloseOverlay();\n\n\t\t\tdom.overlay = document.createElement( 'div' );\n\t\t\tdom.overlay.classList.add( 'overlay' );\n\t\t\tdom.overlay.classList.add( 'overlay-help' );\n\t\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n\n\t\t\tlet shortcuts = keyboard.getShortcuts(),\n\t\t\t\tbindings = keyboard.getBindings();\n\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\n\t\t\tfor( let key in shortcuts ) {\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\n\t\t\t}\n\n\t\t\t// Add custom key bindings that have associated descriptions\n\t\t\tfor( let binding in bindings ) {\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</table>';\n\n\t\t\tdom.overlay.innerHTML = `\n\t\t\t\t<header>\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"viewport\">\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\t\tcloseOverlay();\n\t\t\t\tevent.preventDefault();\n\t\t\t}, false );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Closes any currently open overlay.\n\t */\n\tfunction closeOverlay() {\n\n\t\tif( dom.overlay ) {\n\t\t\tdom.overlay.parentNode.removeChild( dom.overlay );\n\t\t\tdom.overlay = null;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Applies JavaScript-controlled layout rules to the\n\t * presentation.\n\t */\n\tfunction layout() {\n\n\t\tif( dom.wrapper && !print.isPrintingPDF() ) {\n\n\t\t\tif( !config.disableLayout ) {\n\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\n\t\t\t\t// viewport which leads to part of the presentation being\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\n\t\t\t\t// property where 100x adds up to the correct height.\n\t\t\t\t//\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\n\t\t\t\t}\n\n\t\t\t\tconst size = getComputedSlideSize();\n\n\t\t\t\tconst oldScale = scale;\n\n\t\t\t\t// Layout the contents of the slides\n\t\t\t\tlayoutSlideContents( config.width, config.height );\n\n\t\t\t\tdom.slides.style.width = size.width + 'px';\n\t\t\t\tdom.slides.style.height = size.height + 'px';\n\n\t\t\t\t// Determine scale of content to fit within available space\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\n\n\t\t\t\t// Respect max/min scale settings\n\t\t\t\tscale = Math.max( scale, config.minScale );\n\t\t\t\tscale = Math.min( scale, config.maxScale );\n\n\t\t\t\t// Don't apply any scaling styles if scale is 1\n\t\t\t\tif( scale === 1 ) {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Zoom Scaling\n\t\t\t\t\t// Content remains crisp no matter how much we scale. Side\n\t\t\t\t\t// effects are minor differences in text layout and iframe\n\t\t\t\t\t// viewports changing size. A 200x200 iframe viewport in a\n\t\t\t\t\t// 2x zoomed presentation ends up having a 400x400 viewport.\n\t\t\t\t\tif( scale > 1 && Device.supportsZoom && window.devicePixelRatio < 2 ) {\n\t\t\t\t\t\tdom.slides.style.zoom = scale;\n\t\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t\t}\n\t\t\t\t\t// Transform Scaling\n\t\t\t\t\t// Content layout remains the exact same when scaled up.\n\t\t\t\t\t// Side effect is content becoming blurred, especially with\n\t\t\t\t\t// high scale values on ldpi screens.\n\t\t\t\t\telse {\n\t\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\t\tdom.slides.style.left = '50%';\n\t\t\t\t\t\tdom.slides.style.top = '50%';\n\t\t\t\t\t\tdom.slides.style.bottom = 'auto';\n\t\t\t\t\t\tdom.slides.style.right = 'auto';\n\t\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Select all slides, vertical and horizontal\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\n\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\n\t\t\t\t\tconst slide = slides[ i ];\n\n\t\t\t\t\t// Don't bother updating invisible slides\n\t\t\t\t\tif( slide.style.display === 'none' ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\n\t\t\t\t\t\t// children will be\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\t\t\tslide.style.top = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tslide.style.top = '';\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif( oldScale !== scale ) {\n\t\t\t\t\tdispatchEvent({\n\t\t\t\t\t\ttype: 'resize',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\toldScale,\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\tsize\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprogress.update();\n\t\t\tbackgrounds.updateParallax();\n\n\t\t\tif( overview.isActive() ) {\n\t\t\t\toverview.update();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies layout logic to the contents of all slides in\n\t * the presentation.\n\t *\n\t * @param {string|number} width\n\t * @param {string|number} height\n\t */\n\tfunction layoutSlideContents( width, height ) {\n\n\t\t// Handle sizing of elements with the 'r-stretch' class\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\n\n\t\t\t// Determine how much vertical space we can use\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\n\n\t\t\t// Consider the aspect ratio of media elements\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\n\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\n\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.width = width + 'px';\n\t\t\t\telement.style.height = remainingHeight + 'px';\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Calculates the computed pixel size of our slides. These\n\t * values are based on the width and height configuration\n\t * options.\n\t *\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n\t */\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\n\n\t\tconst size = {\n\t\t\t// Slide size\n\t\t\twidth: config.width,\n\t\t\theight: config.height,\n\n\t\t\t// Presentation size\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\n\t\t};\n\n\t\t// Reduce available space by margin\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\n\n\t\t// Slide width may be a percentage of available width\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\n\t\t}\n\n\t\t// Slide height may be a percentage of available height\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\n\t\t}\n\n\t\treturn size;\n\n\t}\n\n\t/**\n\t * Stores the vertical index of a stack so that the same\n\t * vertical slide can be selected when navigating to and\n\t * from the stack.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t * @param {string|number} [v=0] Index to memorize\n\t */\n\tfunction setPreviousVerticalIndex( stack, v ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieves the vertical index which was stored using\n\t * #setPreviousVerticalIndex() or 0 if no previous index\n\t * exists.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t */\n\tfunction getPreviousVerticalIndex( stack ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\n\t\t\t// Prefer manually defined start-indexv\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\n\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is vertical\n\t * (nested within another slide).\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\n\t * orientation of\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalSlide( slide = currentSlide ) {\n\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\n\n\t}\n\n\t/**\n\t * Returns true if we're on the last slide in the current\n\t * vertical stack.\n\t */\n\tfunction isLastVerticalSlide() {\n\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the first slide in\n\t * the presentation.\n\t */\n\tfunction isFirstSlide() {\n\n\t\treturn indexh === 0 && indexv === 0;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the last slide in\n\t * the presenation. If the last slide is a stack, we only\n\t * consider this the last slide if it's at the end of the\n\t * stack.\n\t */\n\tfunction isLastSlide() {\n\n\t\tif( currentSlide ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\t// If it's vertical, does its parent have a next sibling?\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Enters the paused mode which fades everything on screen to\n\t * black.\n\t */\n\tfunction pause() {\n\n\t\tif( config.pause ) {\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\n\t\t\tcancelAutoSlide();\n\t\t\tdom.wrapper.classList.add( 'paused' );\n\n\t\t\tif( wasPaused === false ) {\n\t\t\t\tdispatchEvent({ type: 'paused' });\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Exits from the paused mode.\n\t */\n\tfunction resume() {\n\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\t\tdom.wrapper.classList.remove( 'paused' );\n\n\t\tcueAutoSlide();\n\n\t\tif( wasPaused ) {\n\t\t\tdispatchEvent({ type: 'resumed' });\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the paused mode on and off.\n\t */\n\tfunction togglePause( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? pause() : resume();\n\t\t}\n\t\telse {\n\t\t\tisPaused() ? resume() : pause();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if we are currently in the paused mode.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isPaused() {\n\n\t\treturn dom.wrapper.classList.contains( 'paused' );\n\n\t}\n\n\t/**\n\t * Toggles the auto slide mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which sets the desired state.\n\t * True means autoplay starts, false means it stops.\n\t */\n\n\tfunction toggleAutoSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t\telse {\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the auto slide mode is currently on.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isAutoSliding() {\n\n\t\treturn !!( autoSlide && !autoSlidePaused );\n\n\t}\n\n\t/**\n\t * Steps from the current point in the presentation to the\n\t * slide which matches the specified horizontal and vertical\n\t * indices.\n\t *\n\t * @param {number} [h=indexh] Horizontal index of the target slide\n\t * @param {number} [v=indexv] Vertical index of the target slide\n\t * @param {number} [f] Index of a fragment within the\n\t * target slide to activate\n\t * @param {number} [o] Origin for use in multimaster environments\n\t */\n\tfunction slide( h, v, f, o ) {\n\n\t\t// Remember where we were at before\n\t\tpreviousSlide = currentSlide;\n\n\t\t// Query all horizontal slides in the deck\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\n\n\t\t// Abort if there are no slides\n\t\tif( horizontalSlides.length === 0 ) return;\n\n\t\t// If no vertical index is specified and the upcoming slide is a\n\t\t// stack, resume at its previous vertical index\n\t\tif( v === undefined && !overview.isActive() ) {\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\n\t\t}\n\n\t\t// If we were on a vertical stack, remember what vertical index\n\t\t// it was on so we can resume at the same position when returning\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\n\t\t}\n\n\t\t// Remember the state before this slide\n\t\tconst stateBefore = state.concat();\n\n\t\t// Reset the state array\n\t\tstate.length = 0;\n\n\t\tlet indexhBefore = indexh || 0,\n\t\t\tindexvBefore = indexv || 0;\n\n\t\t// Activate and transition to the new slide\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\n\n\t\t// Dispatch an event if the slide changed\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\n\n\t\t// Ensure that the previous slide is never the same as the current\n\t\tif( !slideChanged ) previousSlide = null;\n\n\t\t// Find the current horizontal slide and any possible vertical slides\n\t\t// within it\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\n\n\t\t// Store references to the previous and current slides\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\n\n\t\tlet autoAnimateTransition = false;\n\n\t\t// Detect if we're moving between two auto-animated slides\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\n\n\t\t\t// If this is an auto-animated transition, we disable the\n\t\t\t// regular slide transition\n\t\t\t//\n\t\t\t// Note 20-03-2020:\n\t\t\t// This needs to happen before we update slide visibility,\n\t\t\t// otherwise transitions will still run in Safari.\n\t\t\tif( previousSlide.hasAttribute( 'data-auto-animate' ) && currentSlide.hasAttribute( 'data-auto-animate' ) ) {\n\t\t\t\tautoAnimateTransition = true;\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' );\n\t\t\t}\n\n\t\t\ttransition = 'running';\n\n\t\t}\n\n\t\t// Update the visibility of slides now that the indices have changed\n\t\tupdateSlidesVisibility();\n\n\t\tlayout();\n\n\t\t// Update the overview if it's currently active\n\t\tif( overview.isActive() ) {\n\t\t\toverview.update();\n\t\t}\n\n\t\t// Show fragment, if specified\n\t\tif( typeof f !== 'undefined' ) {\n\t\t\tfragments.goto( f );\n\t\t}\n\n\t\t// Solves an edge case where the previous slide maintains the\n\t\t// 'present' class when navigating between adjacent vertical\n\t\t// stacks\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\n\t\t\tpreviousSlide.classList.remove( 'present' );\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t// Reset all slides upon navigate to home\n\t\t\tif( isFirstSlide() ) {\n\t\t\t\t// Launch async task\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\n\t\t\t\t\t} );\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t}\n\n\t\t// Apply the new state\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\n\t\t\t// Check if this state existed on the previous slide. If it\n\t\t\t// did, we will avoid adding it repeatedly\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\n\t\t\t\tif( stateBefore[j] === state[i] ) {\n\t\t\t\t\tstateBefore.splice( j, 1 );\n\t\t\t\t\tcontinue stateLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.classList.add( state[i] );\n\n\t\t\t// Dispatch custom event matching the state's name\n\t\t\tdispatchEvent({ type: state[i] });\n\t\t}\n\n\t\t// Clean up the remains of the previous state\n\t\twhile( stateBefore.length ) {\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\n\t\t}\n\n\t\tif( slideChanged ) {\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidechanged',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tpreviousSlide,\n\t\t\t\t\tcurrentSlide,\n\t\t\t\t\torigin: o\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Handle embedded content\n\t\tif( slideChanged || !previousSlide ) {\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\t// Announce the current slide contents to screen readers\n\t\tannounceStatus( getStatusText( currentSlide ) );\n\n\t\tprogress.update();\n\t\tcontrols.update();\n\t\tnotes.update();\n\t\tbackgrounds.update();\n\t\tbackgrounds.updateParallax();\n\t\tslideNumber.update();\n\t\tfragments.update();\n\n\t\t// Update the URL hash\n\t\tlocation.writeURL();\n\n\t\tcueAutoSlide();\n\n\t\t// Auto-animation\n\t\tif( autoAnimateTransition ) {\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\n\t\t\t}, 0 );\n\n\t\t\tif( config.autoAnimate ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Syncs the presentation with the current DOM. Useful\n\t * when new slides or control elements are added or when\n\t * the configuration has changed.\n\t */\n\tfunction sync() {\n\n\t\t// Subscribe to input\n\t\tremoveEventListeners();\n\t\taddEventListeners();\n\n\t\t// Force a layout to make sure the current config is accounted for\n\t\tlayout();\n\n\t\t// Reflect the current autoSlide value\n\t\tautoSlide = config.autoSlide;\n\n\t\t// Start auto-sliding if it's enabled\n\t\tcueAutoSlide();\n\n\t\t// Re-create all slide backgrounds\n\t\tbackgrounds.create();\n\n\t\t// Write the current hash to the URL\n\t\tlocation.writeURL();\n\n\t\tfragments.sortAll();\n\n\t\tcontrols.update();\n\t\tprogress.update();\n\n\t\tupdateSlidesVisibility();\n\n\t\tnotes.update();\n\t\tnotes.updateVisibility();\n\t\tbackgrounds.update( true );\n\t\tslideNumber.update();\n\t\tslideContent.formatEmbeddedContent();\n\n\t\t// Start or stop embedded content depending on global config\n\t\tif( config.autoPlayMedia === false ) {\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\n\t\t}\n\t\telse {\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\tif( overview.isActive() ) {\n\t\t\toverview.layout();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates reveal.js to keep in sync with new slide attributes. For\n\t * example, if you add a new `data-background-image` you can call\n\t * this to have reveal.js render the new background image.\n\t *\n\t * Similar to #sync() but more efficient when you only need to\n\t * refresh a specific slide.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tfunction syncSlide( slide = currentSlide ) {\n\n\t\tbackgrounds.sync( slide );\n\t\tfragments.sync( slide );\n\n\t\tslideContent.load( slide );\n\n\t\tbackgrounds.update();\n\t\tnotes.update();\n\n\t}\n\n\t/**\n\t * Resets all vertical slides so that only the first\n\t * is visible.\n\t */\n\tfunction resetVerticalSlides() {\n\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tif( y > 0 ) {\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Randomly shuffles all slides in the deck.\n\t */\n\tfunction shuffle( slides = getHorizontalSlides() ) {\n\n\t\tslides.forEach( ( slide, i ) => {\n\n\t\t\t// Insert the slide next to a randomly picked sibling slide\n\t\t\t// slide. This may cause the slide to insert before itself,\n\t\t\t// but that's not an issue.\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\n\t\t\t}\n\n\t\t\t// Randomize the order of vertical slides (if there are any)\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\n\t\t\tif( verticalSlides.length ) {\n\t\t\t\tshuffle( verticalSlides );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates one dimension of slides by showing the slide\n\t * with the specified index.\n\t *\n\t * @param {string} selector A CSS selector that will fetch\n\t * the group of slides we are working with\n\t * @param {number} index The index of the slide that should be\n\t * shown\n\t *\n\t * @return {number} The index of the slide that is now shown,\n\t * might differ from the passed in index if it was out of\n\t * bounds.\n\t */\n\tfunction updateSlides( selector, index ) {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\n\t\t\tslidesLength = slides.length;\n\n\t\tlet printMode = print.isPrintingPDF();\n\n\t\tif( slidesLength ) {\n\n\t\t\t// Should the index loop?\n\t\t\tif( config.loop ) {\n\t\t\t\tindex %= slidesLength;\n\n\t\t\t\tif( index < 0 ) {\n\t\t\t\t\tindex = slidesLength + index;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Enforce max and minimum index bounds\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\n\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\n\t\t\t\tlet element = slides[i];\n\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\n\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\n\t\t\t\telement.classList.remove( 'past' );\n\t\t\t\telement.classList.remove( 'present' );\n\t\t\t\telement.classList.remove( 'future' );\n\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\t\t\t\telement.setAttribute( 'hidden', '' );\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t\t// If this element contains vertical slides\n\t\t\t\tif( element.querySelector( 'section' ) ) {\n\t\t\t\t\telement.classList.add( 'stack' );\n\t\t\t\t}\n\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\n\t\t\t\tif( printMode ) {\n\t\t\t\t\telement.classList.add( 'present' );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( i < index ) {\n\t\t\t\t\t// Any element previous to index is given the 'past' class\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Show all fragments in prior slides\n\t\t\t\t\t\tUtil.queryAll( element, '.fragment' ).forEach( fragment => {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( i > index ) {\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Hide all fragments in future slides\n\t\t\t\t\t\tUtil.queryAll( element, '.fragment.visible' ).forEach( fragment => {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet slide = slides[index];\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\n\n\t\t\t// Mark the current slide as present\n\t\t\tslide.classList.add( 'present' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\n\t\t\tif( !wasPresent ) {\n\t\t\t\t// Dispatch an event indicating the slide is now visible\n\t\t\t\tdispatchEvent({\n\t\t\t\t\ttarget: slide,\n\t\t\t\t\ttype: 'visible',\n\t\t\t\t\tbubbles: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If this slide has a state associated with it, add it\n\t\t\t// onto the current state of the deck\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\n\t\t\tif( slideState ) {\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Since there are no slides we can't be anywhere beyond the\n\t\t\t// zeroth index\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Optimization method; hide all slides that are far away\n\t * from the present slide.\n\t */\n\tfunction updateSlidesVisibility() {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet horizontalSlides = getHorizontalSlides(),\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\n\t\t\tdistanceX,\n\t\t\tdistanceY;\n\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\n\n\t\t\t// The number of steps away from the present slide that will\n\t\t\t// be visible\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\n\n\t\t\t// Shorten the view distance on devices that typically have\n\t\t\t// less resources\n\t\t\tif( Device.isMobile ) {\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\n\t\t\t}\n\n\t\t\t// All slides need to be visible when exporting to PDF\n\t\t\tif( print.isPrintingPDF() ) {\n\t\t\t\tviewDistance = Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\n\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\n\n\t\t\t\t// Determine how far away this slide is from the present\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\n\n\t\t\t\t// If the presentation is looped, distance should measure\n\t\t\t\t// 1 between the first and last slides\n\t\t\t\tif( config.loop ) {\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\n\t\t\t\t}\n\n\t\t\t\t// Show the horizontal slide if it's within the view distance\n\t\t\t\tif( distanceX < viewDistance ) {\n\t\t\t\t\tslideContent.load( horizontalSlide );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslideContent.unload( horizontalSlide );\n\t\t\t\t}\n\n\t\t\t\tif( verticalSlidesLength ) {\n\n\t\t\t\t\tlet oy = getPreviousVerticalIndex( horizontalSlide );\n\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\n\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\n\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\n\t\t\tif( hasVerticalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\n\t\t\t}\n\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\n\t\t\tif( hasHorizontalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Determine what available routes there are for navigation.\n\t *\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n\t */\n\tfunction availableRoutes({ includeFragments = false } = {}) {\n\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\tlet routes = {\n\t\t\tleft: indexh > 0,\n\t\t\tright: indexh < horizontalSlides.length - 1,\n\t\t\tup: indexv > 0,\n\t\t\tdown: indexv < verticalSlides.length - 1\n\t\t};\n\n\t\t// Looped presentations can always be navigated as long as\n\t\t// there are slides available\n\t\tif( config.loop ) {\n\t\t\tif( horizontalSlides.length > 1 ) {\n\t\t\t\troutes.left = true;\n\t\t\t\troutes.right = true;\n\t\t\t}\n\n\t\t\tif( verticalSlides.length > 1 ) {\n\t\t\t\troutes.up = true;\n\t\t\t\troutes.down = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\n\t\t\troutes.right = routes.right || routes.down;\n\t\t\troutes.left = routes.left || routes.up;\n\t\t}\n\n\t\t// If includeFragments is set, a route will be considered\n\t\t// availalbe if either a slid OR fragment is available in\n\t\t// the given direction\n\t\tif( includeFragments === true ) {\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\n\t\t}\n\n\t\t// Reverse horizontal controls for rtl\n\t\tif( config.rtl ) {\n\t\t\tlet left = routes.left;\n\t\t\troutes.left = routes.right;\n\t\t\troutes.right = left;\n\t\t}\n\n\t\treturn routes;\n\n\t}\n\n\t/**\n\t * Returns the number of past slides. This can be used as a global\n\t * flattened index for slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n\t *\n\t * @return {number} Past slide count\n\t */\n\tfunction getSlidePastCount( slide = currentSlide ) {\n\n\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t// The number of past slides\n\t\tlet pastCount = 0;\n\n\t\t// Step through all slides and count the past ones\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\n\n\t\t\tlet horizontalSlide = horizontalSlides[i];\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\n\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\n\n\t\t\t\t// Stop as soon as we arrive at the present\n\t\t\t\tif( verticalSlides[j] === slide ) {\n\t\t\t\t\tbreak mainLoop;\n\t\t\t\t}\n\n\t\t\t\t// Don't count slides with the \"uncounted\" class\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\n\t\t\t\t\tpastCount++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Stop as soon as we arrive at the present\n\t\t\tif( horizontalSlide === slide ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Don't count the wrapping section for vertical slides and\n\t\t\t// slides marked as uncounted\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\n\t\t\t\tpastCount++;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount;\n\n\t}\n\n\t/**\n\t * Returns a value ranging from 0-1 that represents\n\t * how far into the presentation we have navigated.\n\t *\n\t * @return {number}\n\t */\n\tfunction getProgress() {\n\n\t\t// The number of past and total slides\n\t\tlet totalCount = getTotalSlides();\n\t\tlet pastCount = getSlidePastCount();\n\n\t\tif( currentSlide ) {\n\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\n\n\t\t\t// If there are fragments in the current slide those should be\n\t\t\t// accounted for in the progress.\n\t\t\tif( allFragments.length > 0 ) {\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\n\n\t\t\t\t// This value represents how big a portion of the slide progress\n\t\t\t\t// that is made up by its fragments (0-1)\n\t\t\t\tlet fragmentWeight = 0.9;\n\n\t\t\t\t// Add fragment progress to the past slide count\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\n\n\t}\n\n\t/**\n\t * Retrieves the h/v location and fragment of the current,\n\t * or specified, slide.\n\t *\n\t * @param {HTMLElement} [slide] If specified, the returned\n\t * index will be for this slide rather than the currently\n\t * active one\n\t *\n\t * @return {{h: number, v: number, f: number}}\n\t */\n\tfunction getIndices( slide ) {\n\n\t\t// By default, return the current indices\n\t\tlet h = indexh,\n\t\t\tv = indexv,\n\t\t\tf;\n\n\t\t// If a slide is specified, return the indices of that slide\n\t\tif( slide ) {\n\t\t\tlet isVertical = isVerticalSlide( slide );\n\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\n\n\t\t\t// Select all horizontal slides\n\t\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t\t// Now that we know which the horizontal slide is, get its index\n\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\n\n\t\t\t// Assume we're not vertical\n\t\t\tv = undefined;\n\n\t\t\t// If this is a vertical slide, grab the vertical index\n\t\t\tif( isVertical ) {\n\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\n\t\t\t}\n\t\t}\n\n\t\tif( !slide && currentSlide ) {\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\n\t\t\tif( hasFragments ) {\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { h, v, f };\n\n\t}\n\n\t/**\n\t * Retrieves all slides in this presentation.\n\t */\n\tfunction getSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\n\n\t}\n\n\t/**\n\t * Returns a list of all horizontal slides in the deck. Each\n\t * vertical stack is included as one horizontal slide in the\n\t * resulting array.\n\t */\n\tfunction getHorizontalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\n\n\t}\n\n\t/**\n\t * Returns all vertical slides that exist within this deck.\n\t */\n\tfunction getVerticalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\n\n\t}\n\n\t/**\n\t * Returns all vertical stacks (each stack can contain multiple slides).\n\t */\n\tfunction getVerticalStacks() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\n\n\t}\n\n\t/**\n\t * Returns true if there are at least two horizontal slides.\n\t */\n\tfunction hasHorizontalSlides() {\n\n\t\treturn getHorizontalSlides().length > 1;\n\t}\n\n\t/**\n\t * Returns true if there are at least two vertical slides.\n\t */\n\tfunction hasVerticalSlides() {\n\n\t\treturn getVerticalSlides().length > 1;\n\n\t}\n\n\t/**\n\t * Returns an array of objects where each object represents the\n\t * attributes on its respective slide.\n\t */\n\tfunction getSlidesAttributes() {\n\n\t\treturn getSlides().map( slide => {\n\n\t\t\tlet attributes = {};\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\n\t\t\t\tlet attribute = slide.attributes[ i ];\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\n\t\t\t}\n\t\t\treturn attributes;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Retrieves the total number of slides in this presentation.\n\t *\n\t * @return {number}\n\t */\n\tfunction getTotalSlides() {\n\n\t\treturn getSlides().length;\n\n\t}\n\n\t/**\n\t * Returns the slide element matching the specified index.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction getSlide( x, y ) {\n\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\n\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalSlide;\n\n\t}\n\n\t/**\n\t * Returns the background element for the given slide.\n\t * All slides, even the ones with no background properties\n\t * defined, have a background element so as long as the\n\t * index is valid an element will be returned.\n\t *\n\t * @param {mixed} x Horizontal background index OR a slide\n\t * HTML element\n\t * @param {number} y Vertical background index\n\t * @return {(HTMLElement[]|*)}\n\t */\n\tfunction getSlideBackground( x, y ) {\n\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\n\t\tif( slide ) {\n\t\t\treturn slide.slideBackgroundElement;\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\t/**\n\t * Retrieves the current state of the presentation as\n\t * an object. This state can then be restored at any\n\t * time.\n\t *\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n\t */\n\tfunction getState() {\n\n\t\tlet indices = getIndices();\n\n\t\treturn {\n\t\t\tindexh: indices.h,\n\t\t\tindexv: indices.v,\n\t\t\tindexf: indices.f,\n\t\t\tpaused: isPaused(),\n\t\t\toverview: overview.isActive()\n\t\t};\n\n\t}\n\n\t/**\n\t * Restores the presentation to the given state.\n\t *\n\t * @param {object} state As generated by getState()\n\t * @see {@link getState} generates the parameter `state`\n\t */\n\tfunction setState( state ) {\n\n\t\tif( typeof state === 'object' ) {\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\n\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\n\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\n\t\t\t\ttogglePause( pausedFlag );\n\t\t\t}\n\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\n\t\t\t\toverview.toggle( overviewFlag );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Cues a new automated slide if enabled in the config.\n\t */\n\tfunction cueAutoSlide() {\n\n\t\tcancelAutoSlide();\n\n\t\tif( currentSlide && config.autoSlide !== false ) {\n\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment' );\n\n\t\t\t// When the slide first appears there is no \"current\" fragment so\n\t\t\t// we look for a data-autoslide timing on the first fragment\n\t\t\tif( !fragment ) fragment = currentSlide.querySelector( '.fragment' );\n\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\n\n\t\t\t// Pick value in the following priority order:\n\t\t\t// 1. Current fragment's data-autoslide\n\t\t\t// 2. Current slide's data-autoslide\n\t\t\t// 3. Parent slide's data-autoslide\n\t\t\t// 4. Global autoSlide setting\n\t\t\tif( fragmentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( slideAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( parentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tautoSlide = config.autoSlide;\n\n\t\t\t\t// If there are media elements with data-autoplay,\n\t\t\t\t// automatically set the autoSlide duration to the\n\t\t\t\t// length of that media. Not applicable if the slide\n\t\t\t\t// is divided up into fragments.\n\t\t\t\t// playbackRate is accounted for in the duration.\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cue the next auto-slide if:\n\t\t\t// - There is an autoSlide value\n\t\t\t// - Auto-sliding isn't paused by the user\n\t\t\t// - The presentation isn't paused\n\t\t\t// - The overview isn't active\n\t\t\t// - The presentation isn't over\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\n\t\t\t\t\t\tconfig.autoSlideMethod()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnavigateNext();\n\t\t\t\t\t}\n\t\t\t\t\tcueAutoSlide();\n\t\t\t\t}, autoSlide );\n\t\t\t\tautoSlideStartTime = Date.now();\n\t\t\t}\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Cancels any ongoing request to auto-slide.\n\t */\n\tfunction cancelAutoSlide() {\n\n\t\tclearTimeout( autoSlideTimeout );\n\t\tautoSlideTimeout = -1;\n\n\t}\n\n\tfunction pauseAutoSlide() {\n\n\t\tif( autoSlide && !autoSlidePaused ) {\n\t\t\tautoSlidePaused = true;\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\n\t\t\tclearTimeout( autoSlideTimeout );\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( false );\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction resumeAutoSlide() {\n\n\t\tif( autoSlide && autoSlidePaused ) {\n\t\t\tautoSlidePaused = false;\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\n\t\t\tcueAutoSlide();\n\t\t}\n\n\t}\n\n\tfunction navigateLeft() {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || fragments.next() === false ) && availableRoutes().left ) {\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || fragments.prev() === false ) && availableRoutes().left ) {\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateRight() {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || fragments.prev() === false ) && availableRoutes().right ) {\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || fragments.next() === false ) && availableRoutes().right ) {\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateUp() {\n\n\t\t// Prioritize hiding fragments\n\t\tif( ( overview.isActive() || fragments.prev() === false ) && availableRoutes().up ) {\n\t\t\tslide( indexh, indexv - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateDown() {\n\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( ( overview.isActive() || fragments.next() === false ) && availableRoutes().down ) {\n\t\t\tslide( indexh, indexv + 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Navigates backwards, prioritized in the following order:\n\t * 1) Previous fragment\n\t * 2) Previous vertical slide\n\t * 3) Previous horizontal slide\n\t */\n\tfunction navigatePrev() {\n\n\t\t// Prioritize revealing fragments\n\t\tif( fragments.prev() === false ) {\n\t\t\tif( availableRoutes().up ) {\n\t\t\t\tnavigateUp();\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\n\t\t\t\tlet previousSlide;\n\n\t\t\t\tif( config.rtl ) {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\n\t\t\t\t}\n\n\t\t\t\tif( previousSlide ) {\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\n\t\t\t\t\tlet h = indexh - 1;\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * The reverse of #navigatePrev().\n\t */\n\tfunction navigateNext() {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( fragments.next() === false ) {\n\n\t\t\tlet routes = availableRoutes();\n\n\t\t\t// When looping is enabled `routes.down` is always available\n\t\t\t// so we need a separate check for when we've reached the\n\t\t\t// end of a stack and should move horizontally\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide( currentSlide ) ) {\n\t\t\t\troutes.down = false;\n\t\t\t}\n\n\t\t\tif( routes.down ) {\n\t\t\t\tnavigateDown();\n\t\t\t}\n\t\t\telse if( config.rtl ) {\n\t\t\t\tnavigateLeft();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnavigateRight();\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ----------------------------- EVENTS -------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t/**\n\t * Called by all event handlers that are based on user\n\t * input.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onUserInput( event ) {\n\n\t\tif( config.autoSlideStoppable ) {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Event listener for transition end on the current slide.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onTransitionEnd( event ) {\n\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\n\t\t\ttransition = 'idle';\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidetransitionend',\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\n\t\t\t});\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the window level 'resize' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowResize( event ) {\n\n\t\tlayout();\n\n\t}\n\n\t/**\n\t * Handle for the window level 'visibilitychange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onPageVisibilityChange( event ) {\n\n\t\t// If, after clicking a link or similar and we're coming back,\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\n\t\t\t// Not all elements support .blur() - SVGs among them.\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t}\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles clicks on links that are set to preview in the\n\t * iframe overlay.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPreviewLinkClicked( event ) {\n\n\t\tif( event.currentTarget && event.currentTarget.hasAttribute( 'href' ) ) {\n\t\t\tlet url = event.currentTarget.getAttribute( 'href' );\n\t\t\tif( url ) {\n\t\t\t\tshowPreview( url );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles click on the auto-sliding controls element.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onAutoSlidePlayerClick( event ) {\n\n\t\t// Replay\n\t\tif( isLastSlide() && config.loop === false ) {\n\t\t\tslide( 0, 0 );\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Resume\n\t\telse if( autoSlidePaused ) {\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Pause\n\t\telse {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------------- API --------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t// The public reveal.js API\n\tconst API = {\n\t\tVERSION,\n\n\t\tinitialize,\n\t\tconfigure,\n\n\t\tsync,\n\t\tsyncSlide,\n\t\tsyncFragments: fragments.sync.bind( fragments ),\n\n\t\t// Navigation methods\n\t\tslide,\n\t\tleft: navigateLeft,\n\t\tright: navigateRight,\n\t\tup: navigateUp,\n\t\tdown: navigateDown,\n\t\tprev: navigatePrev,\n\t\tnext: navigateNext,\n\n\t\t// Navigation aliases\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\n\n\t\t// Fragment methods\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\n\t\tprevFragment: fragments.prev.bind( fragments ),\n\t\tnextFragment: fragments.next.bind( fragments ),\n\n\t\t// Event binding\n\t\ton,\n\t\toff,\n\n\t\t// Legacy event binding methods left in for backwards compatibility\n\t\taddEventListener: on,\n\t\tremoveEventListener: off,\n\n\t\t// Forces an update in slide layout\n\t\tlayout,\n\n\t\t// Randomizes the order of slides\n\t\tshuffle,\n\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\n\t\tavailableRoutes,\n\n\t\t// Returns an object with the available fragments as booleans (prev/next)\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\n\n\t\t// Toggles a help overlay with keyboard shortcuts\n\t\ttoggleHelp,\n\n\t\t// Toggles the overview mode on/off\n\t\ttoggleOverview: overview.toggle.bind( overview ),\n\n\t\t// Toggles the \"black screen\" mode on/off\n\t\ttogglePause,\n\n\t\t// Toggles the auto slide mode on/off\n\t\ttoggleAutoSlide,\n\n\t\t// Slide navigation checks\n\t\tisFirstSlide,\n\t\tisLastSlide,\n\t\tisLastVerticalSlide,\n\t\tisVerticalSlide,\n\n\t\t// State checks\n\t\tisPaused,\n\t\tisAutoSliding,\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\n\t\tisOverview: overview.isActive.bind( overview ),\n\t\tisFocused: focus.isFocused.bind( focus ),\n\t\tisPrintingPDF: print.isPrintingPDF.bind( print ),\n\n\t\t// Checks if reveal.js has been loaded and is ready for use\n\t\tisReady: () => ready,\n\n\t\t// Slide preloading\n\t\tloadSlide: slideContent.load.bind( slideContent ),\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\n\n\t\t// Adds or removes all internal event listeners\n\t\taddEventListeners,\n\t\tremoveEventListeners,\n\t\tdispatchEvent,\n\n\t\t// Facility for persisting and restoring the presentation state\n\t\tgetState,\n\t\tsetState,\n\n\t\t// Presentation progress on range of 0-1\n\t\tgetProgress,\n\n\t\t// Returns the indices of the current, or specified, slide\n\t\tgetIndices,\n\n\t\t// Returns an Array of key:value maps of the attributes of each\n\t\t// slide in the deck\n\t\tgetSlidesAttributes,\n\n\t\t// Returns the number of slides that we have passed\n\t\tgetSlidePastCount,\n\n\t\t// Returns the total number of slides\n\t\tgetTotalSlides,\n\n\t\t// Returns the slide element at the specified index\n\t\tgetSlide,\n\n\t\t// Returns the previous slide element, may be null\n\t\tgetPreviousSlide: () => previousSlide,\n\n\t\t// Returns the current slide element\n\t\tgetCurrentSlide: () => currentSlide,\n\n\t\t// Returns the slide background element at the specified index\n\t\tgetSlideBackground,\n\n\t\t// Returns the speaker notes string for a slide, or null\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\n\n\t\t// Returns an Array of all slides\n\t\tgetSlides,\n\n\t\t// Returns an array with all horizontal/vertical slides in the deck\n\t\tgetHorizontalSlides,\n\t\tgetVerticalSlides,\n\n\t\t// Checks if the presentation contains two or more horizontal\n\t\t// and vertical slides\n\t\thasHorizontalSlides,\n\t\thasVerticalSlides,\n\n\t\t// Checks if the deck has navigated on either axis at least once\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n\t\t// Adds/removes a custom key binding\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\n\n\t\t// Programmatically triggers a keyboard event\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\n\n\t\t// Registers a new shortcut to include in the help overlay\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\n\n\t\tgetComputedSlideSize,\n\n\t\t// Returns the current scale of the presentation content\n\t\tgetScale: () => scale,\n\n\t\t// Returns the current configuration object\n\t\tgetConfig: () => config,\n\n\t\t// Helper method, retrieves query string as a key:value map\n\t\tgetQueryHash: Util.getQueryHash,\n\n\t\t// Returns reveal.js DOM elements\n\t\tgetRevealElement: () => revealElement,\n\t\tgetSlidesElement: () => dom.slides,\n\t\tgetViewportElement: () => dom.viewport,\n\t\tgetBackgroundsElement: () => backgrounds.element,\n\n\t\t// API for registering and retrieving plugins\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\n\n\t};\n\n\t// Our internal API which controllers have access to\n\tUtil.extend( Reveal, {\n\t\t...API,\n\n\t\t// Methods for announcing content to screen readers\n\t\tannounceStatus,\n\t\tgetStatusText,\n\n\t\t// Controllers\n\t\tprint,\n\t\tfocus,\n\t\tprogress,\n\t\tcontrols,\n\t\tlocation,\n\t\toverview,\n\t\tfragments,\n\t\tslideContent,\n\t\tslideNumber,\n\n\t\tonUserInput,\n\t\tcloseOverlay,\n\t\tupdateSlidesVisibility,\n\t\tlayoutSlideContents,\n\t\ttransformSlides,\n\t\tcueAutoSlide,\n\t\tcancelAutoSlide\n\t} );\n\n\treturn API;\n\n};\n","import Deck, { VERSION } from './reveal.js'\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = options => {\n\n\t// Create our singleton reveal.js instance\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\n\n\t// Invoke any enqueued API calls\n\tenqueuedAPICalls.map( method => method( Reveal ) );\n\n\treturn Reveal.initialize();\n\n}\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\n\tReveal[method] = ( ...args ) => {\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\n\t}\n} );\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;"],"names":["POST_MESSAGE_METHOD_BLACKLIST","FRAGMENT_STYLE_REGEX","extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","createSingletonNode","container","tagname","classname","innerHTML","nodes","length","testNode","node","document","createElement","appendChild","createStyleSheet","tag","type","styleSheet","cssText","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","getRemainingHeight","height","newHeight","oldHeight","offsetHeight","removeProperty","UA","navigator","userAgent","testElement","isMobile","test","platform","maxTouchPoints","isChrome","isAndroid","supportsZoom","e","t","slice","o","l","u","cancelAnimationFrame","requestAnimationFrame","s","filter","dirty","active","c","forEach","styleComputed","m","y","v","p","d","f","S","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","n","getComputedStyle","getPropertyValue","display","preStyleTestCompleted","fontSize","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","h","w","observeMutations","observer","disconnect","originalStyle","z","F","MutationObserver","observe","g","subtree","childList","characterData","W","E","clearTimeout","setTimeout","x","observeWindowDelay","M","Object","defineProperty","set","concat","observeWindow","fitAll","C","assign","map","newbie","push","fit","unfreeze","freeze","unsubscribe","arguments","window","SlideContent","constructor","Reveal","startEmbeddedIframe","this","bind","shouldPreload","preload","getConfig","preloadIframes","hasAttribute","load","slide","options","tagName","setAttribute","getAttribute","removeAttribute","media","sources","source","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","encodeURI","isSpeakerNotes","video","muted","excludeIframes","iframe","width","maxHeight","maxWidth","backgroundIframeElement","querySelector","dataset","fitted","fitty","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","src","indexOf","startEmbeddedContent","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","addEventListener","removeEventListener","event","isAttachedToDOM","isVisible","currentTime","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintingPDF","showSlideNumber","update","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","sep","isVerticalSlide","url","getHash","formatNumber","delimiter","isNaN","colorToRgb","color","hex3","r","parseInt","charAt","hex6","substr","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","contentElement","sync","backgroundColor","opacity","data","backgroundTransition","backgroundOpacity","contrastColor","computedBackgroundStyle","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","previousBackground","slideContent","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","classToBubble","contains","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","verticalSlideCount","parallaxBackgroundVertical","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","allSlides","getSlides","slideDirection","css","getAutoAnimatableElements","elements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","delay","autoAnimateTarget","join","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","nodeName","innerText","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","key","fromElement","pimaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","Fragments","fragments","disable","enable","availableRoutes","hiddenFragments","prev","next","sort","grouped","ordered","unordered","sorted","fragment","group","sortAll","horizontalSlide","verticalSlide","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","bubbles","goto","offset","lastVisibleFragment","progress","fragmentInURL","writeURL","Overview","onSlideClicked","activate","overview","isActive","cancelAutoSlide","getBackgroundsElement","margin","slideSize","getComputedSlideSize","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","layout","hslide","vslide","hbackground","vbackground","vmin","innerWidth","innerHeight","transformSlides","deactivate","cueAutoSlide","toggle","override","preventDefault","Keyboard","shortcuts","bindings","onDocumentKeyDown","onDocumentKeyPress","navigationMode","unbind","addKeyBinding","binding","callback","keyCode","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","shiftKey","charCode","toggleHelp","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","prevSlideShortcut","firstSlideShortcut","lastSlideShortcut","unusedModifier","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","apply","action","left","Number","MAX_VALUE","right","up","down","togglePause","requestMethod","documentElement","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","enterFullscreen","embedded","getViewportElement","autoSlideStoppable","toggleAutoSlide","closeOverlay","Location","writeURLTimeout","onWindowHashChange","readURL","hash","bits","name","undefined","getElementById","decodeURIComponent","error","isSameNameAsCurrentSlide","slideIndices","hashIndexBase","hashOneBasedIndex","history","replaceState","pathname","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slidesTotal","slideIndex","floor","clientX","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","Date","now","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","insertBefore","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","Promise","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","init","hasPlugin","getPlugin","getRegisteredPlugins","Print","setupPDF","pageWidth","pageHeight","body","layoutSlideContents","doingSlideNumbers","top","contentHeight","scrollHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","page","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","nextSibling","bottom","numberElement","pdfSeparateFragments","previousFragmentStep","previousPage","fragmentGroups","clonedPage","cloneNode","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","clientY","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","Focus","onRevealPointerDown","onDocumentPointerDown","blur","focus","Notes","print","updateVisibility","hasNotes","isSpeakerNotesWindow","Playback","progressCheck","diameter","diameter2","thickness","playing","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","destroy","minScale","maxScale","respondToHashChanges","disableLayout","touch","loop","shuffle","help","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","previewLinks","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","POSITIVE_INFINITY","viewDistance","mobileViewDistance","indexh","indexv","previousSlide","autoSlidePlayer","ready","navigationHistory","slidesTransform","dom","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","backgrounds","pointer","initialize","initOptions","wrapper","slides","defaultConfig","Util","setViewport","start","viewport","removeHiddenSlides","setupDOM","setupPostMessage","setupScrollPrevention","resetVerticalSlides","removeEventListeners","Device","pauseOverlay","statusElement","createStatusElement","position","overflow","clip","text","nodeType","isAriaHidden","isDisplayHidden","child","trim","setInterval","scrollTop","scrollLeft","JSON","parse","method","args","dispatchPostMessage","isReady","numberOfSlides","setProperty","resume","enablePreviewLinks","disablePreviewLinks","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","createEvent","initEvent","parent","self","message","namespace","getState","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","size","oldScale","presentationWidth","presentationHeight","zoom","devicePixelRatio","len","remainingHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","stack","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","resumeAutoSlide","pauseAutoSlide","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","getVerticalStacks","stateLoop","j","splice","origin","syncSlide","beforeSlide","random","slidesLength","printMode","reverse","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","totalCount","allFragments","fragmentWeight","isVertical","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","getSlidesAttributes","attributes","attribute","getSlide","indexf","paused","setState","pausedFlag","overviewFlag","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","currentTarget","API","VERSION","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","isOverview","loadSlide","unloadSlide","getPreviousSlide","getPlugins","Deck","enqueuedAPICalls","deck"],"mappings":"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"}