<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
	<title> - mCaptcha</title>
	<link href="https://batsense.net/tags/mcaptcha/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://batsense.net"/>
	<generator uri="https://www.getzola.org/">Zola</generator>
	<updated>2022-07-21T00:00:00+00:00</updated>
	<id>https://batsense.net/tags/mcaptcha/atom.xml</id>
	<entry xml:lang="en">
		<title>Introducing mCaptcha</title>
		<published>2022-07-21T00:00:00+00:00</published>
		<updated>2022-07-21T00:00:00+00:00</updated>
		<link href="https://batsense.net/talks/codeberg-introducing-mcaptcha/" type="text/html"/>
		<id>https://batsense.net/talks/codeberg-introducing-mcaptcha/</id>
		<content type="html">&lt;p&gt;Codeberg is on the lookout for a new, accessible CAPTCHA to protect
their registration endpoint. mCaptcha&#x27;s proof of work validation
mechanism fully presents a seamless UX, which is also highly accessible:
all the user has to do is to click a button to go through validation!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;details&quot;&gt;Details:&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;date:&lt;&#x2F;strong&gt; 21&lt;sup&gt;th&lt;&#x2F;sup&gt; July, 2022&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;venue:&lt;&#x2F;strong&gt; Online&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;organised by:&lt;&#x2F;strong&gt; &lt;a href=&quot;https:&#x2F;&#x2F;codeberg.org&quot;&gt;Codeberg&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;resources&quot;&gt;Resources&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;.&#x2F;slides&#x2F;2022-07-21-codeberg-introducing-mcaptcha.odp&quot;&gt;slides(ODP)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;.&#x2F;slides&#x2F;2022-07-21-codeberg-introducing-mcaptcha.pdf&quot;&gt;slides(PDF)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>mCaptcha - to hell with captchas!</title>
		<published>2021-03-04T00:00:00+00:00</published>
		<updated>2021-03-04T00:00:00+00:00</updated>
		<link href="https://batsense.net/blog/04-03-21-mcaptcha/" type="text/html"/>
		<id>https://batsense.net/blog/04-03-21-mcaptcha/</id>
		<content type="html">&lt;p&gt;While working on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shuttlecraft&#x2F;identity&quot;&gt;Identity&lt;&#x2F;a&gt;, I
noticed some of the endpoints were computationally expensive. The target
platforms for Shuttlecraft systems are cheap computers such as Raspberry
Pis so I learned a &lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;new language&lt;&#x2F;a&gt; and picked up a
new &lt;a href=&quot;https:&#x2F;&#x2F;actix.rs&quot;&gt;web framework&lt;&#x2F;a&gt; among many things, to make things
go faster. And those computationally expensive endpoints were dog slow
and vulnerable to denial-of-service attacks if left unprotected.&lt;&#x2F;p&gt;
&lt;p&gt;I came up with the following ways to rate-limit those endpoints:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Captcha: reCaptcha&#x2F;hCAptcha types&lt;&#x2F;li&gt;
&lt;li&gt;IP based filtering: &lt;code&gt;x&lt;&#x2F;code&gt; requests per IP address during a specific
interval of time&lt;&#x2F;li&gt;
&lt;li&gt;Do nothing: there&#x27;s only so much that you can do :p&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Let&#x27;s analyse each one of these solutions.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;1-captcha&quot;&gt;1. Captcha:&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;pros&quot;&gt;Pros:&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Captcha widgets are the norm for detecting bot activity.&lt;&#x2F;li&gt;
&lt;li&gt;Large companies like Google and Cloudflare are invested in making
captchas work.&lt;&#x2F;li&gt;
&lt;li&gt;Machine learning is used study bot activity and flag users down
whenever there&#x27;s a resemblance.&lt;&#x2F;li&gt;
&lt;li&gt;No user learning curve: netizens are familiar with captchas&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;cons&quot;&gt;Cons:&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Proprietary software:&lt;&#x2F;strong&gt; what is the backend doing? What sort of
algorithms are they using? Do they exhibit unfair bias when letting
users through? We will never know. We have to take them by their word
and have no way of verifying their claims. They can, in effect, ban
users from visiting your website if they wanted to do.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Privacy invasive:&lt;&#x2F;strong&gt; Captchas mine data. I have Google domains
blacklisted by default and every time I visit a site that uses
Google&#x27;s reCaptcha, I am forced to temporarily whitelist them. I don&#x27;t
like doing that.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Annoying:&lt;&#x2F;strong&gt; It sucks that I have to manually solve captchas to tell
a website that I am, in fact, a legitimate user. We should have
automated this stuff a long time ago!&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h5 id=&quot;anecdote&quot;&gt;&lt;&#x2F;h5&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;True story:&lt;&#x2F;strong&gt; My university has a student portal that we use to submit
assignments and view scorecards. They have a dumb captcha at the
sign-in page to keep bots away. The IT staff figured they&#x27;ll be better
protected if they replace it with reCaptcha. And they did.
{{&amp;lt; figure src=&amp;quot;&#x2F;img&#x2F;blog&#x2F;04-03-21-mcaptcha&#x2F;portal-dumb-captcha.png&amp;quot; caption=&amp;quot;dumb captcha university portal&amp;quot; alt=&amp;quot;dumb captcha university portal&amp;quot; &amp;gt;}} &amp;gt;
I have terrible luck with captcha systems. They always flag me as
a bot. So after this change, when I went online to upload an
assignment, I had to solve 49 captchas &lt;em&gt;and&lt;&#x2F;em&gt; get flagged as a bot and do
another 49 only to get flagged as a bot again. Only this time, Google
wouldn&#x27;t let me try again and asked me to &amp;quot;try again later&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;Luckily I wasn&#x27;t alone. You see, my university is behind a
&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Network_address_translation&quot;&gt;NAT&lt;&#x2F;a&gt; so
10,000 people share a single public IP address. From Google&#x27;s
perspective, we would appear as a giant bot that generates a lot of
traffic(stopped using Google search after I moved there because of all
the captchas that they made me solve).&lt;&#x2F;p&gt;
&lt;p&gt;The next day, the IT team rolled back to the old dumb captchas&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;2-ip-based-filtering&quot;&gt;2. IP based filtering:&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;pros-1&quot;&gt;Pros:&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Easy to implement:&lt;&#x2F;strong&gt; IP addresses are ubiquitous on the internet&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Stateful:&lt;&#x2F;strong&gt; Unless and until users are hopping between networks,
they&#x27;ll have the same IP address throughout their session with the
site. So it&#x27;s trivially easy to use it as an ID to rate-limit clients.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;cons-1&quot;&gt;Cons:&lt;&#x2F;h3&gt;
&lt;p&gt;There&#x27;s only one that I could think of:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Doesn&#x27;t work for people behind NAT:&lt;&#x2F;strong&gt; When multiple users are
using the same IP address, there isn&#x27;t an effective way to uniquely
identify each one of them. So an IP-based mechanism would fail in such
situations.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;batsense.net&#x2F;blog&#x2F;04-03-21-mcaptcha&#x2F;#anecdote&quot;&gt;See previous section&lt;&#x2F;a&gt; for anecdotal evidence.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;3-don-t-do-anything&quot;&gt;3. Don&#x27;t do anything:&lt;&#x2F;h2&gt;
&lt;p&gt;Not really an option.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;So what we need is something that that will work behind NATs, is privacy
respecting but most importantly, it should be free(as in freedom)&lt;&#x2F;p&gt;
&lt;h2 id=&quot;enter-mcaptcha&quot;&gt;Enter mCaptcha&lt;&#x2F;h2&gt;
&lt;p&gt;mCaptcha is a proof-of-work(PoW) based rate-limiting system that uses
variable difficulty.&lt;&#x2F;p&gt;
&lt;p&gt;When a user visits a mCaptcha enabled website,
their client automatically generates a PoW to qualify for performing an
action(submitting forms, etc.). This enforces a rate-limit.&lt;&#x2F;p&gt;
&lt;p&gt;When the server is under load, the difficulty will rise to make the
clients spend more time preparing the request than the server processing
the request. This makes DoS attacks expensive for the attackers as well.&lt;&#x2F;p&gt;
</content>
	</entry>
</feed>
